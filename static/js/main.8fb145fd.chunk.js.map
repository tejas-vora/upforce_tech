{"version":3,"sources":["components/signupForm.js","pages/signup.js","App.js","reportWebVitals.js","index.js"],"names":["SignupForm","activePage","useForm","register","handleSubmit","errors","formState","handleSubmitData","data","a","fetch","method","headers","Accept","body","JSON","stringify","onSubmit","className","htmlFor","id","placeholder","required","first_name","last_name","username","type","pattern","email","password","Signup","useState","setActivePage","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fb145fd.chunk.js","sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nconst SignupForm = ({ activePage }) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const handleSubmitData = async (data) => {\n    if (activePage === \"fanSignup\") {\n      await fetch(\"http://wren.in:3200/api/sign-up/fan\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      });\n    } else {\n      await fetch(\"http://wren.in:3200/api/sign-up/talent\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      });\n    }\n  };\n\n  return (\n    <>\n      <div>\n        <form onSubmit={handleSubmit(handleSubmitData)}>\n          <div className=\"form-group\">\n            <label htmlFor=\"firstName\" className=\"label_text\">\n              First name <span>*</span>\n            </label>\n            <input\n              id=\"firstName\"\n              className=\"form-control form-rounded\"\n              placeholder=\"First name\"\n              {...register(\"first_name\", { required: true })}\n            />\n            <div className=\"error mt-2\">\n              {errors.first_name && <span>This field is required</span>}\n            </div>\n          </div>\n          <div className=\"form-group mt-4\">\n            <label htmlFor=\"larstName\" className=\"label_text\">\n              Last name <span>*</span>\n            </label>\n            <input\n              id=\"larstName\"\n              className=\"form-control form-rounded\"\n              placeholder=\"Last name\"\n              {...register(\"last_name\", { required: true })}\n            />\n            <div className=\"error mt-2\">\n              {errors.last_name && <span>This field is required</span>}\n            </div>\n          </div>\n\n          <div className=\"form-group mt-4\">\n            <label htmlFor=\"userName\" className=\"label_text\">\n              User Name<span>*</span>\n            </label>\n            <input\n              id=\"userName\"\n              className=\"form-control form-rounded\"\n              placeholder=\"User name\"\n              {...register(\"username\", { required: true })}\n            />\n            <div className=\"error mt-2\">\n              {errors.username && <span>This field is required</span>}\n            </div>\n          </div>\n\n          <div className=\"form-group mt-4\">\n            <label htmlFor=\"email\" className=\"label_text\">\n              Email <span>*</span>\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control form-rounded\"\n              placeholder=\"email\"\n              id=\"email\"\n              {...register(\"email\", {\n                required: true,\n                pattern:\n                  /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/,\n              })}\n            />\n\n            {errors.email && (\n              <div className=\"error mt-2\">\n                <>\n                  {errors.email.type == \"required\" && (\n                    <span>This field is required</span>\n                  )}\n                  {errors.email.type == \"pattern\" && (\n                    <span>Enter A valid Email Address</span>\n                  )}\n                </>\n              </div>\n            )}\n          </div>\n\n          <div className=\"form-group mt-4\">\n            <label htmlFor=\"password\" className=\"label_text\">\n              Password <span>*</span>\n            </label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              className=\"form-control form-rounded\"\n              placeholder=\"password\"\n              {...register(\"password\", {\n                required: true,\n                pattern:\n                  /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n              })}\n            />\n            {errors.password && (\n              <div className=\"error mt-2\">\n                <>\n                  {errors.password.type == \"required\" && (\n                    <span>This field is required</span>\n                  )}\n                  {errors.password.type == \"pattern\" && (\n                    <span>\n                      Password Should be of Minimum eight characters, at least\n                      one letter, one number and one special character:\n                    </span>\n                  )}\n                </>\n              </div>\n            )}\n          </div>\n\n          <div className=\"form-group mt-3\">\n            {/* <div className=\"form-check\"> */}\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              id=\"gridCheck\"\n            />\n            <label className=\"form-check-label\" htmlFor=\"gridCheck\">\n              I agree to the{\" \"}\n              <span className=\"term_condition\">Terms And condition</span>\n            </label>\n            {/* </div> */}\n          </div>\n\n          <button type=\"submit\" className=\"submit_btn\">\n            Sign Up\n          </button>\n        </form>\n      </div>\n    </>\n  );\n};\nexport default SignupForm;\n","import React, { useState } from \"react\";\nimport SignupForm from \"../components/signupForm\";\n\nconst Signup = () => {\n  const [activePage, setActivePage] = useState(\"fanSignup\");\n  return (\n    <>\n      <div className=\"comtainer\">\n        <div>\n          <button\n            type=\"button\"\n            className={`signup_button ${\n              activePage === \"fanSignup\" ? \"active_button\" : \"\"\n            }`}\n            onClick={() => setActivePage(\"fanSignup\")}\n          >\n            FAN SIGNUP\n          </button>\n          <button\n            type=\"button\"\n            className={`signup_button ${\n              activePage === \"talentSignup\" ? \"active_button\" : \"\"\n            }`}\n            onClick={() => setActivePage(\"talentSignup\")}\n          >\n            TALENT SIGNUP\n          </button>\n        </div>\n        <div>\n          <h3 className=\"title\">Create Your Fan Account</h3>\n        </div>\n        <SignupForm activePage={activePage} />\n      </div>\n    </>\n  );\n};\nexport default Signup;\n","import \"./App.css\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport Signup from \"./pages/signup\";\n\nfunction App() {\n  return (\n    <>\n      <div className=\"App\">\n        <Signup />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}